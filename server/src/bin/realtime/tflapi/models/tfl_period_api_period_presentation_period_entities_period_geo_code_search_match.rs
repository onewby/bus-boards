/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodGeoCodeSearchMatch {
    /// The type of the place e.g. \"street_address\"
    #[serde(rename = "types", skip_serializing_if = "Option::is_none")]
    pub types: Option<Vec<String>>,
    /// A string describing the formatted address of the place. Adds additional context to the place's Name.
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "lat", skip_serializing_if = "Option::is_none")]
    pub lat: Option<f64>,
    #[serde(rename = "lon", skip_serializing_if = "Option::is_none")]
    pub lon: Option<f64>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodGeoCodeSearchMatch {
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodGeoCodeSearchMatch {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodGeoCodeSearchMatch {
            types: None,
            address: None,
            id: None,
            url: None,
            name: None,
            lat: None,
            lon: None,
        }
    }
}

