/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

/// TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruption : Represents a disruption to a route within the transport network.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruption {
    /// Gets or sets the category of this dispruption.
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<Category>,
    /// Gets or sets the disruption type of this dispruption.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Gets or sets the description of the category.
    #[serde(rename = "categoryDescription", skip_serializing_if = "Option::is_none")]
    pub category_description: Option<String>,
    /// Gets or sets the description of this disruption.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Gets or sets the summary of this disruption.
    #[serde(rename = "summary", skip_serializing_if = "Option::is_none")]
    pub summary: Option<String>,
    /// Gets or sets the additionaInfo of this disruption.
    #[serde(rename = "additionalInfo", skip_serializing_if = "Option::is_none")]
    pub additional_info: Option<String>,
    /// Gets or sets the date/time when this disruption was created.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    /// Gets or sets the date/time when this disruption was last updated.
    #[serde(rename = "lastUpdate", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<String>,
    /// Gets or sets the routes affected by this disruption
    #[serde(rename = "affectedRoutes", skip_serializing_if = "Option::is_none")]
    pub affected_routes: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruptedRoute>>,
    /// Gets or sets the stops affected by this disruption
    #[serde(rename = "affectedStops", skip_serializing_if = "Option::is_none")]
    pub affected_stops: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodStopPoint>>,
    /// Text describing the closure type
    #[serde(rename = "closureText", skip_serializing_if = "Option::is_none")]
    pub closure_text: Option<String>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruption {
    /// Represents a disruption to a route within the transport network.
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruption {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruption {
            category: None,
            r#type: None,
            category_description: None,
            description: None,
            summary: None,
            additional_info: None,
            created: None,
            last_update: None,
            affected_routes: None,
            affected_stops: None,
            closure_text: None,
        }
    }
}
/// Gets or sets the category of this dispruption.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Category {
    #[serde(rename = "Undefined")]
    Undefined,
    #[serde(rename = "RealTime")]
    RealTime,
    #[serde(rename = "PlannedWork")]
    PlannedWork,
    #[serde(rename = "Information")]
    Information,
    #[serde(rename = "Event")]
    Event,
    #[serde(rename = "Crowding")]
    Crowding,
    #[serde(rename = "StatusAlert")]
    StatusAlert,
}

impl Default for Category {
    fn default() -> Category {
        Self::Undefined
    }
}

