/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodFaresPeriodRecommendation {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "rule", skip_serializing_if = "Option::is_none")]
    pub rule: Option<i32>,
    #[serde(rename = "rank", skip_serializing_if = "Option::is_none")]
    pub rank: Option<i32>,
    #[serde(rename = "fareType", skip_serializing_if = "Option::is_none")]
    pub fare_type: Option<String>,
    #[serde(rename = "product", skip_serializing_if = "Option::is_none")]
    pub product: Option<String>,
    #[serde(rename = "ticketType", skip_serializing_if = "Option::is_none")]
    pub ticket_type: Option<String>,
    #[serde(rename = "ticketTime", skip_serializing_if = "Option::is_none")]
    pub ticket_time: Option<String>,
    #[serde(rename = "productType", skip_serializing_if = "Option::is_none")]
    pub product_type: Option<String>,
    #[serde(rename = "discountCard", skip_serializing_if = "Option::is_none")]
    pub discount_card: Option<String>,
    #[serde(rename = "zones", skip_serializing_if = "Option::is_none")]
    pub zones: Option<String>,
    #[serde(rename = "cost", skip_serializing_if = "Option::is_none")]
    pub cost: Option<String>,
    #[serde(rename = "priceDescription", skip_serializing_if = "Option::is_none")]
    pub price_description: Option<String>,
    #[serde(rename = "priceComparison", skip_serializing_if = "Option::is_none")]
    pub price_comparison: Option<String>,
    #[serde(rename = "recommendedTopUp", skip_serializing_if = "Option::is_none")]
    pub recommended_top_up: Option<String>,
    #[serde(rename = "notes", skip_serializing_if = "Option::is_none")]
    pub notes: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMessage>>,
    #[serde(rename = "keyFeatures", skip_serializing_if = "Option::is_none")]
    pub key_features: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMessage>>,
    #[serde(rename = "gettingYourTicket", skip_serializing_if = "Option::is_none")]
    pub getting_your_ticket: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMessage>>,
    #[serde(rename = "singleFare", skip_serializing_if = "Option::is_none")]
    pub single_fare: Option<f64>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodFaresPeriodRecommendation {
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodFaresPeriodRecommendation {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodFaresPeriodRecommendation {
            id: None,
            rule: None,
            rank: None,
            fare_type: None,
            product: None,
            ticket_type: None,
            ticket_time: None,
            product_type: None,
            discount_card: None,
            zones: None,
            cost: None,
            price_description: None,
            price_comparison: None,
            recommended_top_up: None,
            notes: None,
            key_features: None,
            getting_your_ticket: None,
            single_fare: None,
        }
    }
}

