/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodSearchCriteria {
    #[serde(rename = "dateTime", skip_serializing_if = "Option::is_none")]
    pub date_time: Option<String>,
    #[serde(rename = "dateTimeType", skip_serializing_if = "Option::is_none")]
    pub date_time_type: Option<DateTimeType>,
    #[serde(rename = "timeAdjustments", skip_serializing_if = "Option::is_none")]
    pub time_adjustments: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodTimeAdjustments>>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodSearchCriteria {
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodSearchCriteria {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodSearchCriteria {
            date_time: None,
            date_time_type: None,
            time_adjustments: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DateTimeType {
    #[serde(rename = "Arriving")]
    Arriving,
    #[serde(rename = "Departing")]
    Departing,
}

impl Default for DateTimeType {
    fn default() -> DateTimeType {
        Self::Arriving
    }
}

