/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

/// TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMatchedRoute : Description of a Route used in Route search results.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMatchedRoute {
    /// The route code
    #[serde(rename = "routeCode", skip_serializing_if = "Option::is_none")]
    pub route_code: Option<String>,
    /// Name such as \"72\"
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Inbound or Outbound
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<String>,
    /// The name of the Origin StopPoint
    #[serde(rename = "originationName", skip_serializing_if = "Option::is_none")]
    pub origination_name: Option<String>,
    /// The name of the Destination StopPoint
    #[serde(rename = "destinationName", skip_serializing_if = "Option::is_none")]
    pub destination_name: Option<String>,
    /// The Id (NaPTAN code) of the Origin StopPoint
    #[serde(rename = "originator", skip_serializing_if = "Option::is_none")]
    pub originator: Option<String>,
    /// The Id (NaPTAN code) or the Destination StopPoint
    #[serde(rename = "destination", skip_serializing_if = "Option::is_none")]
    pub destination: Option<String>,
    /// Regular or Night
    #[serde(rename = "serviceType", skip_serializing_if = "Option::is_none")]
    pub service_type: Option<String>,
    /// The DateTime that the Service containing this Route is valid until.
    #[serde(rename = "validTo", skip_serializing_if = "Option::is_none")]
    pub valid_to: Option<String>,
    /// The DateTime that the Service containing this Route is valid from.
    #[serde(rename = "validFrom", skip_serializing_if = "Option::is_none")]
    pub valid_from: Option<String>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMatchedRoute {
    /// Description of a Route used in Route search results.
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMatchedRoute {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodMatchedRoute {
            route_code: None,
            name: None,
            direction: None,
            origination_name: None,
            destination_name: None,
            originator: None,
            destination: None,
            service_type: None,
            valid_to: None,
            valid_from: None,
        }
    }
}

