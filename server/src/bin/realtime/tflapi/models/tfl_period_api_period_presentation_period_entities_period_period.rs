/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPeriod {
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    #[serde(rename = "fromTime", skip_serializing_if = "Option::is_none")]
    pub from_time: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodTwentyFourHourClockTime>>,
    #[serde(rename = "toTime", skip_serializing_if = "Option::is_none")]
    pub to_time: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodTwentyFourHourClockTime>>,
    #[serde(rename = "frequency", skip_serializing_if = "Option::is_none")]
    pub frequency: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodServiceFrequency>>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPeriod {
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPeriod {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPeriod {
            r#type: None,
            from_time: None,
            to_time: None,
            frequency: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Normal")]
    Normal,
    #[serde(rename = "FrequencyHours")]
    FrequencyHours,
    #[serde(rename = "FrequencyMinutes")]
    FrequencyMinutes,
    #[serde(rename = "Unknown")]
    Unknown,
}

impl Default for Type {
    fn default() -> Type {
        Self::Normal
    }
}

