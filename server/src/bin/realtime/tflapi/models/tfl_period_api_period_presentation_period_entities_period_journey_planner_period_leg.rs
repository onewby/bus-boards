/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodLeg {
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<i32>,
    #[serde(rename = "speed", skip_serializing_if = "Option::is_none")]
    pub speed: Option<String>,
    #[serde(rename = "instruction", skip_serializing_if = "Option::is_none")]
    pub instruction: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodInstruction>>,
    #[serde(rename = "obstacles", skip_serializing_if = "Option::is_none")]
    pub obstacles: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodObstacle>>,
    #[serde(rename = "departureTime", skip_serializing_if = "Option::is_none")]
    pub departure_time: Option<String>,
    #[serde(rename = "arrivalTime", skip_serializing_if = "Option::is_none")]
    pub arrival_time: Option<String>,
    #[serde(rename = "departurePoint", skip_serializing_if = "Option::is_none")]
    pub departure_point: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPoint>>,
    #[serde(rename = "arrivalPoint", skip_serializing_if = "Option::is_none")]
    pub arrival_point: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPoint>>,
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodPath>>,
    #[serde(rename = "routeOptions", skip_serializing_if = "Option::is_none")]
    pub route_options: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodRouteOption>>,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodIdentifier>>,
    #[serde(rename = "disruptions", skip_serializing_if = "Option::is_none")]
    pub disruptions: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodDisruption>>,
    #[serde(rename = "plannedWorks", skip_serializing_if = "Option::is_none")]
    pub planned_works: Option<Vec<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodPlannedWork>>,
    #[serde(rename = "distance", skip_serializing_if = "Option::is_none")]
    pub distance: Option<f64>,
    #[serde(rename = "isDisrupted", skip_serializing_if = "Option::is_none")]
    pub is_disrupted: Option<bool>,
    #[serde(rename = "hasFixedLocations", skip_serializing_if = "Option::is_none")]
    pub has_fixed_locations: Option<bool>,
    #[serde(rename = "scheduledDepartureTime", skip_serializing_if = "Option::is_none")]
    pub scheduled_departure_time: Option<String>,
    #[serde(rename = "scheduledArrivalTime", skip_serializing_if = "Option::is_none")]
    pub scheduled_arrival_time: Option<String>,
    #[serde(rename = "interChangeDuration", skip_serializing_if = "Option::is_none")]
    pub inter_change_duration: Option<String>,
    #[serde(rename = "interChangePosition", skip_serializing_if = "Option::is_none")]
    pub inter_change_position: Option<String>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodLeg {
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodLeg {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodJourneyPlannerPeriodLeg {
            duration: None,
            speed: None,
            instruction: None,
            obstacles: None,
            departure_time: None,
            arrival_time: None,
            departure_point: None,
            arrival_point: None,
            path: None,
            route_options: None,
            mode: None,
            disruptions: None,
            planned_works: None,
            distance: None,
            is_disrupted: None,
            has_fixed_locations: None,
            scheduled_departure_time: None,
            scheduled_arrival_time: None,
            inter_change_duration: None,
            inter_change_position: None,
        }
    }
}

