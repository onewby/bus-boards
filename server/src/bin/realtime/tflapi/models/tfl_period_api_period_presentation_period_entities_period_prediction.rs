/*
 * Transport for London Unified API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::tflapi::models;
use serde::{Deserialize, Serialize};

/// TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPrediction : DTO to capture the prediction details
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPrediction {
    /// The identitier for the prediction
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)
    #[serde(rename = "operationType", skip_serializing_if = "Option::is_none")]
    pub operation_type: Option<i32>,
    /// The actual vehicle in transit (for train modes, the leading car of the rolling set)
    #[serde(rename = "vehicleId", skip_serializing_if = "Option::is_none")]
    pub vehicle_id: Option<String>,
    /// Identifier for the prediction
    #[serde(rename = "naptanId", skip_serializing_if = "Option::is_none")]
    pub naptan_id: Option<String>,
    /// Station name
    #[serde(rename = "stationName", skip_serializing_if = "Option::is_none")]
    pub station_name: Option<String>,
    /// Unique identifier for the Line
    #[serde(rename = "lineId", skip_serializing_if = "Option::is_none")]
    pub line_id: Option<String>,
    /// Line Name
    #[serde(rename = "lineName", skip_serializing_if = "Option::is_none")]
    pub line_name: Option<String>,
    /// Platform name (for bus, this is the stop letter)
    #[serde(rename = "platformName", skip_serializing_if = "Option::is_none")]
    pub platform_name: Option<String>,
    /// Direction (unified to inbound/outbound)
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<String>,
    /// Bearing (between 0 to 359)
    #[serde(rename = "bearing", skip_serializing_if = "Option::is_none")]
    pub bearing: Option<String>,
    /// Naptan Identifier for the prediction's destination
    #[serde(rename = "destinationNaptanId", skip_serializing_if = "Option::is_none")]
    pub destination_naptan_id: Option<String>,
    /// Name of the destination
    #[serde(rename = "destinationName", skip_serializing_if = "Option::is_none")]
    pub destination_name: Option<String>,
    /// Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    /// Prediction of the Time to station in seconds
    #[serde(rename = "timeToStation", skip_serializing_if = "Option::is_none")]
    pub time_to_station: Option<i32>,
    /// The current location of the vehicle.
    #[serde(rename = "currentLocation", skip_serializing_if = "Option::is_none")]
    pub current_location: Option<String>,
    /// Routing information or other descriptive text about the path of the vehicle towards the destination
    #[serde(rename = "towards", skip_serializing_if = "Option::is_none")]
    pub towards: Option<String>,
    /// The expected arrival time of the vehicle at the stop/station
    #[serde(rename = "expectedArrival", skip_serializing_if = "Option::is_none")]
    pub expected_arrival: Option<String>,
    /// The expiry time for the prediction
    #[serde(rename = "timeToLive", skip_serializing_if = "Option::is_none")]
    pub time_to_live: Option<String>,
    /// The mode name of the station/line the prediction relates to
    #[serde(rename = "modeName", skip_serializing_if = "Option::is_none")]
    pub mode_name: Option<String>,
    #[serde(rename = "timing", skip_serializing_if = "Option::is_none")]
    pub timing: Option<Box<models::TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPredictionTiming>>,
}

impl TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPrediction {
    /// DTO to capture the prediction details
    pub fn new() -> TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPrediction {
        TflPeriodApiPeriodPresentationPeriodEntitiesPeriodPrediction {
            id: None,
            operation_type: None,
            vehicle_id: None,
            naptan_id: None,
            station_name: None,
            line_id: None,
            line_name: None,
            platform_name: None,
            direction: None,
            bearing: None,
            destination_naptan_id: None,
            destination_name: None,
            timestamp: None,
            time_to_station: None,
            current_location: None,
            towards: None,
            expected_arrival: None,
            time_to_live: None,
            mode_name: None,
            timing: None,
        }
    }
}

